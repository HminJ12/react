@use './mixin' as m;

section.bmi{
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  form{
    div.radios{
      p{
        position: relative;
        display: flex;
        input{
          @include m.posLT(absolute,50%,50%,-50%,-50%);
          opacity: 0;
          border: none;
          background: none;
          /* display: none; 리액트에서 하면 안 된다 required속성을 못 찾기 때문에 접근을 못한다, 경고메세지 발생함 */
          &:checked + label{
            font-weight: 600;
            text-shadow: 1px 1px 1px rgba(255, 255, 255, 1), -1px -1px 1px rgba(0, 0, 0, 0.1);
            box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 1), inset 3px 3px 5px rgba(0, 0, 0, 0.1);
          }
        }
        label{
          flex: 1;
          padding: 10px 0;
          text-align: center;
          cursor: pointer;
          box-shadow: -2px -2px 5px rgba(255, 255, 255, 1), 3px 3px 5px rgba(0, 0, 0, 0.1);
          &:first-of-type{
            border-radius: 30px 0 0 30px;
          }
          &:last-of-type{
            border-radius: 0 30px 30px 0;
          }
        }
      }
    }

    >div{
      padding: 15px 0;
      border-bottom: 2px groove rgba(#000,0.1);
      >label{
        display: block;
        margin-bottom: 10px;
      }
      input[type=number]{
        width: 100%;
        box-sizing: border-box;
        padding: 10px;
        border: none;
        background: rgba(#FFF, 0.4);
        outline: none;
        box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 1), inset 3px 3px 5px rgba(0, 0, 0, 0.1);
        &:focus {
          background: rgba(#FFF,0.8);
        }
        &::placeholder{
          color: inherit;
          opacity: 0.5;
        }
      }
    }
    button{
      width: 100%;
      padding: 10px 0;
      outline: none;
      box-shadow: -2px -2px 5px rgba(255, 255, 255, 1), 3px 3px 5px rgba(0, 0, 0, 0.1);
      &:focus{
        background: rgba(#FFF,0.2);
      }
      &:active{
        box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 1), inset 3px 3px 5px rgba(0, 0, 0, 0.1);
      }
    }
  }
  div.bmi-result{
    position: absolute;
    left: 100%;
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    box-sizing: border-box;
    padding: 15px;
    width: 100%;
    height: 100%;
    background: rgba(#FFF,0.8);
    transition: all 0.3s;
    &.active{
      left: 0;
    }

    .output{
      position: relative;
      height: 75%;
      margin-bottom: 30px;
      border: 1px solid #EEE;
      &.result{
        background: #FFF;
        p{
          @include m.posLT(absolute,50%,50%,-50%,-50%);
          font-size: 3em;
          font-weight: 600;
          opacity: 0.5;
        }
      }
      &.err{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: #000;
        p{
          position: relative;
          margin: 20px 0;
          color: #FFF;
          i{
            font-size: 8em;
            color: rgba(#FFF,0.5); 
          }
          i:last-child{
            font-size: 15em;
            @include m.posLT(absolute,50%,50%,-50%,-50%);
          }
        }
      }
      svg.morph{
        @include m.posLT(absolute,50%,50%,-50%,-50%);
        height: 100%;
        .org{
            fill: #8FACCA;
          }
      }
      .board{
        position: absolute;
        width: 100%;
        bottom: 0;
        opacity: 0.8;
        .pin{
          position: absolute;
          bottom: 0;
          right: 50%;
          width: 30%;
          transform-origin: 93% center;
          transition: transform 1s;
          transition-timing-function: cubic-bezier(0.64, 0.57, 0.67, 1.53);
        }
      }
    }


    
    button{
      padding: 10px;
      background: rgba(#FFF, 0.5);
      border: 2px solid #FFF;
      box-shadow: -2px -2px 5px rgba(255, 255, 255, 1), 3px 3px 5px rgba(0, 0, 0, 0.1);
      &:active{
        box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 1), inset 3px 3px 5px rgba(0, 0, 0, 0.1);
      }
    }
  }
}